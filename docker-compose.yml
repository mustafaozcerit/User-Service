# version: '3.5'

networks :
  localdev:
    name: localdev

services:

  # MSSQL veritabanı
  dev_mssql:
    image:  mcr.microsoft.com/mssql/server:2019-latest
    container_name: MSSQL
    restart: always
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Password_123
      - MSSQL_TCP_PORT=1436

    volumes:
      - ./volume/mssql:/var/opt/mssql/data

    ports:
      - "1406:1436"
    networks:
      - localdev


      # RabbitMQ
  dev_rabbitmq:
    image: rabbitmq:3-management
    container_name: RabbitMQ
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=mail
      - RABBITMQ_DEFAULT_PASS=1q2w3e4r
      - RABBITMQ_DEFAULT_VHOST=mail
    ports:
      - "15673:15672"
      - "5673:5672"
    networks:
      - localdev

      #PostgreSQL
  dev_postgres:
    image: postgres:15
    container_name: PostgreSQL
    restart: always
    environment:
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: Password_123
      POSTGRES_DB: HCM_Java
    ports:
      - "5433:5432"
    volumes:
      - ./volume/postgres_data:/var/opt/postgresql/data
    networks:
      - localdev

  # Zookeeper (Kafka için gerekli)
  dev_zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0@sha256:5ca5f3269814804ebf88e4da80f9bdc73df1f70ec66b4b8ed0344159e8d342ec
    container_name: Zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - localdev

  # Kafka
  dev_kafka:
    image: confluentinc/cp-server:7.8.0@sha256:fd2e5e9fdedbd523d5bed495d1d4678942a82ee0c4938cddfadb76f86143c0fe
    container_name: Kafka
    depends_on:
      - dev_zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'dev_zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://dev_kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: dev_kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

    networks:
      - localdev

        # schema-registry:
        # image: confluentinc/cp-schema-registry:7.8.0@sha256:ae0695b092314be82fe32058c276d99224855090a77ec169423cf82e02d5e3ac
        # hostname: schema-registry
        # container_name: schema-registry
        # depends_on:
        # - dev_kafka
        # ports:
        # - "8081:8081"
        # environment:
        # SCHEMA_REGISTRY_HOST_NAME: schema-registry
        # SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'dev_kafka:29092'
        # SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

        # connect:
        # image: cnfldemos/cp-server-connect-datagen:0.5.3-7.1.0@sha256:ed1778223761bc51fbcc8df2f77412e565b537587a8f376ca5f6f676fe50c619
        # hostname: connect
        # container_name: connect
        # depends_on:
        # - dev_kafka
        # - schema-registry
        # ports:
        # - "8083:8083"
        # environment:
        # CONNECT_BOOTSTRAP_SERVERS: 'dev_kafka:29092'
        # CONNECT_REST_ADVERTISED_HOST_NAME: connect
        # CONNECT_GROUP_ID: compose-connect-group
        # CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
        # CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        # CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
        # CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
        # CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        # CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
        # CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
        # CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
        # CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        # # CLASSPATH required due to CC-2422
        # CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.4.0.jar
        # CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
        # CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
        # CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
        # CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

        # control-center:
        # image: confluentinc/cp-enterprise-control-center:7.8.0@sha256:6ff3624497d4572613e6f0015a06e44458f3fcb4e999ac33f277db1ad33c82dd
        # hostname: control-center
        # container_name: control-center
        # depends_on:
        # - dev_kafka
        # - schema-registry
        # - connect
        # - ksqldb-server
        # ports:
        # - "9021:9021"
        # environment:
        # CONTROL_CENTER_BOOTSTRAP_SERVERS: 'dev_kafka:29092'
        # CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
        # CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
        # CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://localhost:8088"
        # CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        # CONTROL_CENTER_REPLICATION_FACTOR: 1
        # CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
        # CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
        # CONFLUENT_METRICS_TOPIC_REPLICATION: 1
        # PORT: 9021

        # ksqldb-server:
        # image: confluentinc/cp-ksqldb-server:7.8.0@sha256:2946dd64fdee1bdc850f0e2feb74931cb29f3eabcb2c7fad7d06a0d26418096e
        # hostname: ksqldb-server
        # container_name: ksqldb-server
        # depends_on:
        # - dev_kafka
        # - connect
        # ports:
        # - "8088:8088"
        # environment:
        # KSQL_CONFIG_DIR: "/etc/ksql"
        # KSQL_BOOTSTRAP_SERVERS: "dev_kafka:29092"
        # KSQL_HOST_NAME: ksqldb-server
        # KSQL_LISTENERS: "http://0.0.0.0:8088"
        # KSQL_CACHE_MAX_BYTES_BUFFERING: 0
        # KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        # KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
        # KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
        # KSQL_KSQL_CONNECT_URL: "http://connect:8083"
        # KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
        # KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
        # KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'

        # ksqldb-cli:
        # image: confluentinc/cp-ksqldb-cli:7.8.0@sha256:ca65fb871e2e95f9ad325c28053c9050d94cabb92201a2283382b3e8de10fe81
        # container_name: ksqldb-cli
        # depends_on:
        # - dev_kafka
        # - connect
        # - ksqldb-server
        # entrypoint: /bin/sh
        # tty: true

        # ksql-datagen:
        # image: confluentinc/ksqldb-examples:7.8.0@sha256:629d73a63100b9193ef0923547f1be0cb2110b73a88ee8b03624dbba7c0ad1ef
        # hostname: ksql-datagen
        # container_name: ksql-datagen
        # depends_on:
        # - ksqldb-server
        # - dev_kafka
        # - schema-registry
        # - connect
        # command: "bash -c 'echo Waiting for Kafka to be ready... && \
        # cub kafka-ready -b dev_kafka:29092 1 40 && \
        # echo Waiting for Confluent Schema Registry to be ready... && \
        # cub sr-ready schema-registry 8081 40 && \
        # echo Waiting a few seconds for topic creation to finish... && \
        # sleep 11 && \
      # tail -f /dev/null'"
      # environment:
      # KSQL_CONFIG_DIR: "/etc/ksql"
      # STREAMS_BOOTSTRAP_SERVERS: dev_kafka:29092
      # STREAMS_SCHEMA_REGISTRY_HOST: schema-registry
      # STREAMS_SCHEMA_REGISTRY_PORT: 8081

      # rest-proxy:
      # image: confluentinc/cp-kafka-rest:7.8.0@sha256:d8e9ed9e2a1f0743d2ddf4eddeeff4d502c5623f0b50992bcbbe1f59451ac4ba
      # depends_on:
      # - dev_kafka
      # - schema-registry
      # ports:
      # - 8082:8082
      # hostname: rest-proxy
      # container_name: rest-proxy
      # environment:
      # KAFKA_REST_HOST_NAME: rest-proxy
      # KAFKA_REST_BOOTSTRAP_SERVERS: 'dev_kafka:29092'
      # KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      # KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

      # networks:
      # - localdev

